Passwort Reset
Sind Updates atomar
Aufgabe 1.2: Ist Pfadlänge=Knotenanzahl oder Summe der Distanzen
Aufgabe 1.3. Vorschlag für ID -> Problem unseres Ansatzes: Pfade die existieren, verschwinden und wieder wiederkommen
Aufgabe 1.4: Start- und Endknoten Nodes oder Junctions?
Aufgabe 2.1: Wird ein Pfad der eine Node in der Mitte dazu bekommt ein neuer Pfad?
Aufgabe 2.2: FIll in se blank


1)/4)
Match (j:Junction)-[:CONSISTS_OF]->(n:Node)-[:SEGMENT*{is_junction:false}]->(m:Node)<-[:CONSISTS_OF]-(i:Junction)

(n)<-[:CONSISTS_OF]-(l:Loop)-[:CONSISTS_OF]->(m) 
Merge (n)-[:is_path]-(p:Path)-[:is_path]-(m) return p

2/3) Match (p:Path) with p, (n:Node)-[:is_path]-(p)-[:is_path]-(m:Node),
x=(n:Node)-[:SEGMENT{is_junction:false}*]->(m:Node) return p

Set p.length=length(x), p.time=n.time, p.id=toString(n.id)+"_"+toString(m.id)
geometrische Länge

Currently tested Query:
Match len=(j:Junction)-[:CONSISTS_OF]->(n:Node{time:50})-[:SEGMENT*{is_junction:false}]->(m:Node)<-[:CONSISTS_OF]-(i:Junction), 
(n)<-[:CONSISTS_OF]-(l:Loop)-[:CONSISTS_OF]->(m) 
Merge (n)<-[:IN_PATH]-(p:Path{time:n.time,id:toString(n.id)+"-"+toString(m.id), path_length:length(len)-2})-[:IN_PATH]->(m) return p